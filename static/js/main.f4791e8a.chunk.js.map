{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","box","type","placeholder","onChange","Scroll","style","overflow","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,G,KAbF,SAACC,GAAU,IACZC,EAAmBD,EAAnBC,GAAIC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,MAClB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACpD,gCACI,6BAAKJ,IACL,4BAAIC,YCcLI,EArBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACb,OACE,8BAEMA,EAAOC,KAAI,SAACC,EAAKC,GACf,OACE,cAAC,EAAD,CAEEV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCMVC,EAfG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACE,qBAAKV,UAAU,KAAf,SACE,uBAAOW,KAAG,EACVX,UAAU,6CACVY,KAAK,SACLC,YAAY,gBACZf,KAAK,GACLD,GAAG,GACHiB,SAAUJ,OCAHK,EATA,SAACnB,GACd,OACE,qBAAKoB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,QAA1C,SACGtB,EAAMuB,YCmBEC,E,kDArBb,WAAYxB,GAAO,IAAD,8BAChB,cAAMA,IACDyB,MAAQ,CACXC,UAAU,GAHI,E,8DAOAC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAKzB,OAAGG,KAAKJ,MAAMC,SACL,4EAEFG,KAAK7B,MAAMuB,a,GAjBKQ,a,eC0EZC,E,kDAjEb,aAAc,IAAD,8BACX,gBAiBFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAACjB,YAAaqB,EAAMC,OAAOC,SAjBzC,EAAKX,MAAQ,CACXjB,OAAQ,GACRK,YAAa,IAJJ,E,gEAQK,IAAD,OACjBwB,MAAM,8CACHC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKX,SAAS,CAACtB,OAAQiC,S,+BASlB,IAAD,EAC0BZ,KAAKJ,MAA7BjB,EADF,EACEA,OAAQK,EADV,EACUA,YACV6B,EAAiBlC,EAAOmC,QAAO,SAAAnC,GACnC,OAAOA,EAAON,KAAK0C,cAAcC,SAAShC,EAAY+B,kBAGxD,OADqBpC,EAAOsC,OAQxB,gCACE,sBAAK1C,UAAU,WAAf,UACE,sBAAKA,UAAU,SAAf,UACE,6CACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAWU,aAAce,KAAKI,sBAGpC,qBAAK7B,UAAU,WAAf,SACE,iCAAQ,cAAC,IAAD,CAAa2C,KAAK,iBAM9B,qBAAK3C,UAAU,WAAf,SACE,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAUI,OAAQkC,aAvB1B,8BACE,kD,GAjCQX,aCEHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAKtD,UAAU,YAAf,SACE,cAAC,EAAD,QAIJuD,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f4791e8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'tachyons';\r\n// import {robots} from './robo';\r\n\r\nconst Card = (props) =>{\r\n    const { id, name, email} = props;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p> \r\n            </div>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import  React  from 'react';\r\nimport  Card  from './Card';\r\n// import { robots } from \"../robo\";\r\n\r\nconst CardList = ({robots}) =>{\r\n      return(\r\n        <div>\r\n            {\r\n              robots.map((user,i) =>{\r\n                return (\r\n                  <Card \r\n                    key={i} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    email={robots[i].email} \r\n                  />\r\n                );\r\n              })\r\n            }\r\n        </div>\r\n      );\r\n    \r\n  \r\n}\r\n\r\nexport default CardList;","import React  from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n    return(\r\n      <div className='tc'>\r\n        <input box\r\n        className='pa3 ba b--green bg-lightest-blue searchBox'\r\n        type=\"search\" \r\n        placeholder='serach robots' \r\n        name=\"\" \r\n        id=\"\"\r\n        onChange={searchChange}\r\n        />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', height: '88vh' }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info ){\r\n    this.setState({hasError: true})\r\n  }\r\n\r\n  render(){\r\n\r\n    if(this.state.hasError){\r\n      return <h1>Ooops. That looks something wrong here T.T</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport  CardList  from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\nimport { CgMenuRight } from \"react-icons/cg\";\r\n// import { ReactComponent } from '*.svg';\r\n// import { render } from '@testing-library/react';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: '',\r\n    };\r\n  }\r\n\r\ncomponentDidMount(){\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(users =>{\r\n      this.setState({robots: users})\r\n    });\r\n}\r\n\r\n  onSearchChange = (event) =>{\r\n    this.setState({searchfield: event.target.value })\r\n    \r\n  }\r\n\r\n  render(){\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robots =>{\r\n      return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    const robotsLength = robots.length;\r\n    if (!robotsLength){\r\n      return (\r\n        <div>\r\n          <h1>Loading...</h1>\r\n        </div>)\r\n    }else{\r\n      return(\r\n        <div >\r\n          <div className='headline' >\r\n            <div className='g-left'>\r\n              <h1 >RoboFriends</h1>\r\n                <div className='searchBox'>\r\n                  <SearchBox searchChange={this.onSearchChange} />\r\n                </div>\r\n            </div>\r\n            <div className='menu-btn'>\r\n              <button><CgMenuRight size='2.5em' /></button>\r\n              \r\n            </div>\r\n            \r\n          </div>\r\n          \r\n          <div className='cardList'>\r\n            <Scroll>\r\n                <ErrorBoundry>\r\n                <CardList robots={filteredRobots} />\r\n                </ErrorBoundry>\r\n            </Scroll>\r\n            \r\n          </div>\r\n      </div>\r\n      );\r\n    } \r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  App  from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className='container'>\n      <App />\n      \n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}